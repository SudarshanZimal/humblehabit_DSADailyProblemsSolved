
#########################  BRUTE FORCE APPROACH #########################


//User function Template for Java
class Solution
{
    public int prefixSuffixString(String s1[],String s2[])
    {
        int ans = 0;
        int len2 = s2.length;
        int len1 = s1.length;
        //we traverse the  s2 string  list
        //using for loop
        for( int i = 0 ; i < len2 ; i++){
        //we traverse the s1 string list using for loop
          for( int j = 0 ; j < len1 ; j++){
        //then store the length of s2[i] in the varible for finding the prefix and suffix
          String str = s2[i];
          int len = str.length();
        //find out the prefix and then increse the count means ans 
        if( s1[j].length() >= len&&str.equals(s1[j].substring(0,len))){
           ans++;
            //break the outof the conditional statement because the we need only either suffix or preffix from the string
            break;
        }
        
//find out the suffix and then increase the value of ans by 1
else if( s1[j].length() >= len && str.equals(s1[j].substring(s1[j].length()-len, s1[j].length()))){
   ans++;
    break;
}
}
}
        //finally return the value of ans 
        return ans;
    }
}



##################   USING HASHSET ###############################


class Solution
{
    public int prefixSuffixString(String s1[],String s2[])
    {
        HashSet<String> hs=new HashSet<>();
        for(int i=0;i<s1.length;i++)
        {
            String s="";
            for(int j=0;j<s1[i].length();j++)
            {
                s+=s1[i].charAt(j);
                hs.add(s);
            }
        }
        for(int i=0;i<s1.length;i++)
        {
            String s="";
            for(int j=s1[i].length()-1;j>=0;j--)
            {
                s=s1[i].charAt(j)+s;
                hs.add(s);
            }
        }
        int ct=0;
        for(int i=0;i<s2.length;i++)
        {
            if(hs.contains(s2[i]))
            ct++;
        }
        return ct;
    }
}

//User function Template for Java
class Solution
{    
    
    // public static Long convertToLong(Object array){
    //     String stringToConvert = String.valueOf(array);
    //     Long convertedLong = Long.parseLong(stringToConvert);
    //     return convertedLong;
        
    // }
    public long[] smallerSum(int n,int arr[])
    {  
        //convertToLong
        // Arrays.sort(arr);
        // ArrayList<Integer> list = new ArrayList<Integer>(); 
        // object[] array = new object[n];
       // long[] array = new long[n];
        // int sum = 0;
        // ArrayList<Long> list = new ArrayList<Long>(Arrays.asList(array)); 
        // for( int i = 0 ; i < arr.length ; i++){
        //      if( i==0 )list.add(0);
        //      if( i > 0){
        //       sum+=arr[i-1];
        //       list.add(sum);
        //       array = list.toArray(array);  
        //      }
        // }
        // return Arrays.toString(array);
    //     int ans = 0;
    
    //   for( int i = 0 ; i < arr.length ; i++){
    //          for( int j = 0 ; j < i; j++){
    //              ans+=arr[j];
    //          } 
    //       list.add(ans); 

    //      // array = list.toArray(array);  
    //   }  
    //   return convertToLong(list);
    
      long sum=0;
        int[] temp=arr.clone();
         Arrays.sort(arr);
        long[] b=new long[n];
        Map<Integer,Long> map=new HashMap<Integer,Long>(); 
        for(int i=0;i<n;i++)
        {
         
          if(!map.containsKey(arr[i]))
          {
              map.put(arr[i],sum);
          }
          sum+=arr[i];
        }
        for(int i=0;i<n;i++)
        {
            b[i]=map.get(temp[i]);
        }
            
        return b;
       }  //  }
}

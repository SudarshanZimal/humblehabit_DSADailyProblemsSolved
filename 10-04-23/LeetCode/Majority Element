########################### MY SOLUTION ###############################


import java.util.*;
class Solution {
    public int majorityElement(int[] nums) {
        HashMap<Integer , Integer> map = new HashMap<>();
        int n = nums.length;
        for( int i = 0 ;  i < nums.length ; i++){
            //   map.put(nums[i],map.getOrDefault(nums[i],0)+1);
            if( map.containsKey(nums[i])){
                map.put(nums[i] , map.get(nums[i])+1);
            }else{
                map.put(nums[i] , 1);
            }
        }
        //  Map<Integer,Integer> mp = new HashMap<>();

        // int n = nums.length;
        // for(int i = 0;i < n;i++){
        //     mp.put(nums[i],mp.getOrDefault(nums[i],0)+1);
        // }

        // for(int i = 0;i < n;i++){
        //     if(mp.get(nums[i]) > (n/2)){
        //         return nums[i];
        //     }
        // }
        // return 0;
        // for( int key : map.keySet()){
        //    if( map.get(key)>n/3) System.out.println(key);
            
        // }
        for( int i = 0 ; i < n ; i++){
            if(map.get(nums[i]) > (n/2)){
            return nums[i];
            }
        }
        return 0;
    }
}




############################ BRUTE FORCE SOLUTION ################################


